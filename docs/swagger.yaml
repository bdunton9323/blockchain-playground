basePath: /api/v1
definitions:
  controllers.ApiError:
    properties:
      error:
        type: string
    type: object
  controllers.CreateOrderResponse:
    properties:
      contractAddress:
        description: The address of the contract that manages this token
        type: string
      message:
        description: The ID of the delivery token. A tokenId is unique within a given
          contract.
        type: string
      orderId:
        description: The unique ID of the order
        type: string
    type: object
  controllers.OrderStatusResponse:
    properties:
      status:
        description: indicates the actual resulting status of the order
        type: string
    type: object
  controllers.OrderUpdateRequest:
    properties:
      status:
        description: indicates the desired new status of the order
        type: string
    type: object
  controllers.TokenOwnerResponse:
    properties:
      owner:
        description: The ethereum address of the token holder
        format: address
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: These APIs allow the client to order items from the vendor
  license:
    name: MIT
    url: https://github.com/bdunton9323/blockchain-playground/blob/main/LICENSE
  title: Vendor API
  version: "1.0"
paths:
  /order:
    post:
      consumes:
      - application/json
      description: Places an order that can later be delivered
      parameters:
      - description: The item to order
        in: query
        name: itemId
        required: true
        type: string
      - description: the Ethereum address of the user who can accept the delivery
        in: query
        name: buyerAddress
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.CreateOrderResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ApiError'
      summary: Create order
      tags:
      - order
  /order/{orderId}:
    post:
      consumes:
      - application/json
      description: This action changes the status of an order, either by accepting
        delivery or canceling it
      parameters:
      - description: Indicates the status of the order. One of ('canceled', 'delivered')
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.OrderUpdateRequest'
      - description: If this is a delivery, the delivery recipient's private key (not
          a good idea in real life!)
        in: query
        name: customerKey
        type: string
      - description: the ID of the order being updated
        in: path
        name: orderId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.OrderStatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ApiError'
      summary: Update order status
      tags:
      - order
  /order/{orderId}/owner:
    get:
      consumes:
      - application/json
      description: |-
        Determines who currently owns the deliver token - the vendor or the customer.
        This looks up the contract in the blockchain rather than reading the status from the database.
      parameters:
      - description: the ID of the order to look up
        in: path
        name: orderId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.TokenOwnerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ApiError'
      summary: Get the current owner of the delivery contract token
      tags:
      - order
swagger: "2.0"
