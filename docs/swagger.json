{
    "swagger": "2.0",
    "info": {
        "description": "These APIs allow the client to order items from the vendor",
        "title": "Vendor API",
        "contact": {},
        "license": {
            "name": "MIT",
            "url": "https://github.com/bdunton9323/blockchain-playground/blob/main/LICENSE"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/order": {
            "post": {
                "description": "Places an order that can later be delivered",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Create order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The item to order",
                        "name": "itemId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "the Ethereum address of the user who can accept the delivery",
                        "name": "buyerAddress",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.CreateOrderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ApiError"
                        }
                    }
                }
            }
        },
        "/order/{orderId}": {
            "post": {
                "description": "This action changes the status of an order, either by accepting delivery or canceling it",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Update order status",
                "parameters": [
                    {
                        "description": "Indicates the status of the order. One of ('canceled', 'burned')",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.OrderUpdateRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "If this is a delivery, the delivery recipient's private key (not a good idea in real life!)",
                        "name": "customerKey",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "the ID of the order being updated",
                        "name": "orderId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.OrderStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ApiError"
                        }
                    }
                }
            }
        },
        "/order/{orderId}/owner": {
            "get": {
                "description": "Determines who currently owns the deliver token - the vendor or the customer.\nThis looks up the contract in the blockchain rather than reading the status from the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Get the current owner of the delivery contract token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the ID of the order to look up",
                        "name": "orderId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.TokenOwnerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ApiError"
                        }
                    }
                }
            }
        },
        "/payment/order/{orderId}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "order"
                ],
                "summary": "Pays ether from the customer to the delivery contract for the price of the goods",
                "parameters": [
                    {
                        "type": "string",
                        "description": "If this is a delivery, the delivery recipient's private key (not a good idea in real life!)",
                        "name": "customerKey",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "the ID of the order being updated",
                        "name": "orderId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ApiError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.ApiError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "controllers.CreateOrderResponse": {
            "type": "object",
            "properties": {
                "contractAddress": {
                    "description": "The address of the contract that manages this token",
                    "type": "string"
                },
                "message": {
                    "description": "The ID of the delivery token. A tokenId is unique within a given contract.",
                    "type": "string"
                },
                "orderId": {
                    "description": "The unique ID of the order",
                    "type": "string"
                }
            }
        },
        "controllers.OrderStatusResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "indicates the actual resulting status of the order",
                    "type": "string"
                }
            }
        },
        "controllers.OrderUpdateRequest": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "indicates the desired new status of the order",
                    "type": "string"
                }
            }
        },
        "controllers.TokenOwnerResponse": {
            "type": "object",
            "properties": {
                "owner": {
                    "description": "The ethereum address of the token holder",
                    "type": "string",
                    "format": "address"
                }
            }
        }
    }
}